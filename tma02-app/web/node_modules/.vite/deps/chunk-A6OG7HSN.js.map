{
  "version": 3,
  "sources": ["../../../../node_modules/invariant/browser.js", "../../../../node_modules/compare-versions/index.js", "../../../../node_modules/expo-modules-core/src/errors/CodedError.ts", "../../../../node_modules/expo-modules-core/src/environment/browser.web.ts", "../../../../node_modules/expo-modules-core/src/Platform.ts", "../../../../node_modules/expo-modules-core/src/errors/UnavailabilityError.ts", "../../../../node_modules/expo-modules-core/src/PermissionsInterface.ts", "../../../../node_modules/expo-modules-core/src/PermissionsHook.ts", "../../../../node_modules/expo-modules-core/src/EventEmitter.ts", "../../../../node_modules/expo-modules-core/src/NativeModulesProxy.ts", "../../../../node_modules/expo-modules-core/src/sweet/NativeErrorManager.ts", "../../../../node_modules/expo-modules-core/src/sweet/setUpErrorManager.fx.ts", "../../../../node_modules/expo-modules-core/src/deprecate.ts"],
  "sourcesContent": ["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n", "/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n", "/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n", "declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;\n", "import { Platform as ReactNativePlatform, PlatformOSType } from 'react-native';\n\nimport {\n  isDOMAvailable,\n  canUseEventListeners,\n  canUseViewport,\n  isAsyncDebugging,\n} from './environment/browser';\n\nexport type PlatformSelectOSType = PlatformOSType | 'native' | 'electron' | 'default';\n\nexport type PlatformSelect = <T>(specifics: { [platform in PlatformSelectOSType]?: T }) => T;\n\nconst Platform = {\n  /**\n   * Denotes the currently running platform.\n   * Can be one of ios, android, web.\n   */\n  OS: ReactNativePlatform.OS,\n  /**\n   * Returns the value with the matching platform.\n   * Object keys can be any of ios, android, native, web, default.\n   *\n   * @ios ios, native, default\n   * @android android, native, default\n   * @web web, default\n   */\n  select: ReactNativePlatform.select as PlatformSelect,\n  /**\n   * Denotes if the DOM API is available in the current environment.\n   * The DOM is not available in native React runtimes and Node.js.\n   */\n  isDOMAvailable,\n  /**\n   * Denotes if the current environment can attach event listeners\n   * to the window. This will return false in native React\n   * runtimes and Node.js.\n   */\n  canUseEventListeners,\n  /**\n   * Denotes if the current environment can inspect properties of the\n   * screen on which the current window is being rendered. This will\n   * return false in native React runtimes and Node.js.\n   */\n  canUseViewport,\n  /**\n   * If the JavaScript is being executed in a remote JavaScript environment.\n   * When `true`, synchronous native invocations cannot be executed.\n   */\n  isAsyncDebugging,\n};\n\nexport default Platform;\n", "import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n", "export enum PermissionStatus {\n  /**\n   * User has granted the permission.\n   */\n  GRANTED = 'granted',\n  /**\n   * User hasn't granted or denied the permission yet.\n   */\n  UNDETERMINED = 'undetermined',\n  /**\n   * User has denied the permission.\n   */\n  DENIED = 'denied',\n}\n\n/**\n * Permission expiration time. Currently, all permissions are granted permanently.\n */\nexport type PermissionExpiration = 'never' | number;\n\n/**\n * An object obtained by permissions get and request functions.\n */\nexport interface PermissionResponse {\n  /**\n   * Determines the status of the permission.\n   */\n  status: PermissionStatus;\n  /**\n   * Determines time when the permission expires.\n   */\n  expires: PermissionExpiration;\n  /**\n   * A convenience boolean that indicates if the permission is granted.\n   */\n  granted: boolean;\n  /**\n   * Indicates if user can be asked again for specific permission.\n   * If not, one should be directed to the Settings app\n   * in order to enable/disable the permission.\n   */\n  canAskAgain: boolean;\n}\n", "import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { PermissionResponse } from './PermissionsInterface';\n\n// These types are identical, but improves the readability for suggestions in editors\ntype RequestPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\ntype GetPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\n\ninterface PermissionHookMethods<Permission extends PermissionResponse, Options = never> {\n  /** The permission method that requests the user to grant permission. */\n  requestMethod: (options?: Options) => Promise<Permission>;\n  /** The permission method that only fetches the current permission status. */\n  getMethod: (options?: Options) => Promise<Permission>;\n}\n\ninterface PermissionHookBehavior {\n  /** If the hook should automatically fetch the current permission status, without asking the user. */\n  get?: boolean;\n  /** If the hook should automatically request the user to grant permission. */\n  request?: boolean;\n}\n\nexport type PermissionHookOptions<Options extends object> = PermissionHookBehavior & Options;\n\n/**\n * Get or request permission for protected functionality within the app.\n * It uses separate permission requesters to interact with a single permission.\n * By default, the hook will only retrieve the permission status.\n */\nfunction usePermission<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>,\n  options?: PermissionHookOptions<Options>\n): [Permission | null, RequestPermissionMethod<Permission>, GetPermissionMethod<Permission>] {\n  const isMounted = useRef(true);\n  const [status, setStatus] = useState<Permission | null>(null);\n  const { get = true, request = false, ...permissionOptions } = options || {};\n\n  const getPermission = useCallback(async () => {\n    const response = await methods.getMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.getMethod]);\n\n  const requestPermission = useCallback(async () => {\n    const response = await methods.requestMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.requestMethod]);\n\n  useEffect(\n    function runMethods() {\n      if (request) requestPermission();\n      if (!request && get) getPermission();\n    },\n    [get, request, requestPermission, getPermission]\n  );\n\n  // Workaround for unmounting components receiving state updates\n  useEffect(function didMount() {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return [status, requestPermission, getPermission];\n}\n\n/**\n * Create a new permission hook with the permission methods built-in.\n * This can be used to quickly create specific permission hooks in every module.\n */\nexport function createPermissionHook<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>\n) {\n  return (options?: PermissionHookOptions<Options>) =>\n    usePermission<Permission, Options>(methods, options);\n}\n", "import invariant from 'invariant';\nimport { NativeEventEmitter, NativeModules, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  __expo_module_name__?: string;\n  startObserving?: () => void;\n  stopObserving?: () => void;\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n};\n\n// @needsAudit\nexport type Subscription = {\n  /**\n   * A method to unsubscribe the listener.\n   */\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    // Expo modules installed through the JSI don't have `addListener` and `removeListeners` set,\n    // so if someone wants to use them with `EventEmitter`, make sure to provide these functions\n    // as they are required by `NativeEventEmitter`. This is only temporary — in the future\n    // JSI modules will have event emitter built in.\n    if (nativeModule.__expo_module_name__ && NativeModules.EXReactNativeEventEmitter) {\n      nativeModule.addListener = (...args) =>\n        NativeModules.EXReactNativeEventEmitter.addProxiedListener(\n          nativeModule.__expo_module_name__,\n          ...args\n        );\n      nativeModule.removeListeners = (...args) =>\n        NativeModules.EXReactNativeEventEmitter.removeProxiedListeners(\n          nativeModule.__expo_module_name__,\n          ...args\n        );\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      // `react-native-web@0.17.1` doesn't support `removeSubscription`\n      nativeEmitterSubscription.remove();\n    } else if ('removeSubscription' in this._eventEmitter) {\n      this._eventEmitter.removeSubscription(nativeEmitterSubscription!);\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n", "import { ProxyNativeModule } from './NativeModulesProxy.types';\n\n// We default to an empty object shim wherever we don't have an environment-specific implementation\nexport default {} as { [moduleName: string]: ProxyNativeModule };\n", "import NativeModulesProxy from '../NativeModulesProxy';\nexport default NativeModulesProxy.ExpoModulesCoreErrorManager;\n", "import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobalThis.ExpoModulesCore_CodedError = CodedError;\n", "import compareVersions from 'compare-versions';\n\nimport { CodedError } from './errors/CodedError';\n\nconst postedWarnings: { [key: string]: boolean } = {};\n\n/**\n * Used for deprecating values and throwing an error if a given version of Expo has passed.\n */\nexport default function deprecate(\n  library: string,\n  deprecatedAPI: string,\n  options: {\n    replacement?: string;\n    currentVersion?: string;\n    versionToRemove?: string;\n  } = {}\n): void {\n  const { currentVersion, versionToRemove, replacement } = options;\n  const code = codeFromLibrary(library);\n  const key = `${code}:${deprecatedAPI}:${replacement}`;\n  if (!postedWarnings[key]) {\n    postedWarnings[key] = true;\n  }\n\n  if (\n    !currentVersion ||\n    !versionToRemove ||\n    compareVersions(currentVersion, versionToRemove) >= 0\n  ) {\n    let message = `\\`${deprecatedAPI}\\` has been removed`;\n    if (versionToRemove) {\n      message = `${message} as of version \"${versionToRemove}\"`;\n    }\n    if (replacement && replacement.length) {\n      message = `${message} please migrate to: \\`${replacement}\\``;\n    }\n\n    throw new CodedError(`ERR_DEPRECATED_API`, prependLibrary(library, message));\n  }\n\n  let message = `\\`${deprecatedAPI}\\` has been deprecated`;\n  if (replacement && replacement.length) {\n    message = `${message} in favor of \\`${replacement}\\``;\n  }\n  if (versionToRemove && versionToRemove.length) {\n    message = `${message} and will be removed in version \"${versionToRemove}\"`;\n  }\n  console.warn(prependLibrary(library, message));\n}\n\nfunction prependLibrary(library: string, message: string): string {\n  return `${library}: ${message}`;\n}\n\n/**\n * Transform format:\n * Expo.AR -> EXPO_AR\n * expo-ar -> EXPO_AR\n */\nfunction codeFromLibrary(library: string): string {\n  const code = library.replace(/[-.]/g, '_').toUpperCase();\n  return code;\n}\n"],
  "mappings": "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",
  "names": ["invariant", "compareVersions", "Platform_default", "Platform_default", "PermissionStatus", "invariant", "Platform_default"]
}
